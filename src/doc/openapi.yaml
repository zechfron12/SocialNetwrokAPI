openapi: 3.0.3
info:
  title: Social Network Api - OpenAPI 3.0
  description: >-
    This is a simple Social Network Api.
    In this API you care create, read, update, and delete users and their friend lists.



    Some useful links:

    - [The Social Network API repository](https://github.com/zechfron12/SocialNetwrokAPI)

  version: 1.0.0
servers:
  - url: http://localhost:8000
  - url: https://immense-spire-09428.herokuapp.com
tags:
  - name: user
    description: Operations about user
paths:
  /users:
    get:
      tags:
        - users
      summary: Gets users
      description: Get All users from the server.
      operationId: getUsers
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        500:
          description: internal error
    post:
      tags:
        - users
      summary: Create user
      description: Creates a new user in the database.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUser"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: Bad request, name is too short
        500:
          description: internal error
  /users/{id}:
    get:
      tags:
        - users
      summary: Get user by id
      description: ""
      operationId: getUserByName
      parameters:
        - name: id
          in: path
          description: "The id of the user"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid id supplied
        "404":
          description: User not found
    put:
      tags:
        - users
      summary: Update user
      description: Change the name and/or friends fo a user.
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: Id of the user
          required: true
          schema:
            type: string
      requestBody:
        description: Update user object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUser"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema: $ref:"#/components/schemas/User"
        400:
          description: List or Name is not valid
    delete:
      tags:
        - users
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: Id of the user that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        200:
          description: Succsessful operation
        404:
          description: User not found
  /users/{id}/add-friends:
    post:
      tags:
        - users
      summary: Add friends
      description: Add existent to the friendlist of another user and vice versa.
      operationId: addFriend
      parameters:
        - name: id
          in: path
          description: Id of the user that needs to be deleted
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent user from the database.
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        200:
          description: Succsessful operation
        404:
          description: User not found
  /users/{idBegin}/find-path-to/{idEnd}:
    get:
      tags:
        - users
      summary: Finds the shortes chain of friends between 2 users
      description: Using the bfs algorithm, this route return the shortest chain of friends between 2 users.
      operationId: findPathTo
      parameters:
        - name: idBegin
          in: path
          description: Id of the user that needs to be deleted
          required: true
          schema:
            type: string
        - name: idEnd
          in: path
          description: Id of the user that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UpdateUser"
        404:
          description: User not found

components:
  schemas:
    UpdateUser:
      type: object
      properties:
        name:
          type: string
          example: John
        friends:
          type: array
          items:
            type: string
    User:
      type: object
      properties:
        id:
          type: string;
          example:
        name:
          type: string
          example: John
        friends:
          type: array
          items:
            type: string
    CreateUser:
      type: object
      properties:
        name:
          type: string
          minLenght: 1
          example: John
